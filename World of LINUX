
" World of LINUX "

-------------------------------------
=====================================
-------------------------------------

TryHackMe course:

PART 1:

light weight but no GUI or desktop env but terminal
websites hosted on linux servers
Linux = an umberlla term for mutiple OS, based on UNIX (another OS, free)
Various flavours of Linux with different functions, package managers.
Ubuntu, Debian = some distributions of Linux
Ubuntu server with 512MB RAM is possible
Thin versions for light uses like traffic lights etc...
First at 1991

--- echo [echo SunnyDay, echo "Sunny Day"] = print
--- whoami

Interacting with file systems:
--- ls = list the contents.  [ls, ls folder1]
--- cd = change directory.  [cd folder2, ls, cd..]
--- cat = concatenating. output contents of any file.
--- pwd = print working directory.
ctrl + l = clear
ls, cat difference = cat displays the file content. ls gives info about file, directories.

web, linux dir uses "/"

Searching for files:
instead ls, cd. use find to automate things.
--- find
find -name pswds.txt = know name, location unknown
find -name *.txt = search for all txt files (wildcard=*)
--- grep = search file contents fr ur specific values. good to search in big file.
grep "kali" access.log

Intro to shell operators:
--- & = run cmd in background
--- && = combine 2 cmd in 1 line [ cmd1 && cmd2] 2 runs only if 1 is success
--- > = output redirector. [echo Hey > welcome] = a file welcome created and Hey is stored in it
--- >> = same as >. but append instead replacing. [echo Hello >> welcome] = append Hello to welcome file.

====================================================================================================================

PART 2:

SSH protool between devices, encrypted form.
execute commands on another device remotely.

SSH to login to your machine:
--- ssh username@ip-address = ssh user at ip-address

Intro to flags and switches:
cmd with arguments...

cmd with arguments. a keyword = flags/ switches. to extend cmd behaviours. hyphen.
--- ls
--- ls -a (or) --all = find hidden files
--- ls --help (or) -h for help

man / manual page for documentation of commands.
--- man ls = view manual pages for ls
see in human readable form: -h (or) --human-readable

Interacting with File system-2:
--- touch = create file = touch note2
--- mkdir = create folder/directory = mkdir folder2
--- cp = copy file/folder = cp note note2 = contents of note copied to note2
--- mv = move file/folder = move, rename a file/ folder = mv note2 note3
--- rm = remove file/folder = rm note2, rm -R folder2 [ -R switch for folder ]
--- file = determine file type = file has extensions = file note3

Permissions 101:
certain users = certain access
actions allowed for file/folder = read, write, execute
--- ls -lh = list permissions of all files in the dir
--- su user2 = switch to user2

Users vs Groups:
regular user vs system user
permissions can be granular

User management:
--- sudo adduser username
--- sudo usermod -aG sudo username
--- sudo deluser username
--- 


Switching between users:
--- su command
use root permissions through sudo if not root user
read the man page of su to learn more
su -l user = new login session (-l or --login)
su user = current environment.
elevate priviliges with "sudo": sudo su = as root user.

permissions representation:
- rwx rwx rwx
file type
for file owner
for group owner of file
for all other users

Common Directories:
/etc = root directory, stores files used by OS. eg: sudoers file
/var = a root folder, stores frequently accessed data. eg: /var/log = stores log files. go to var, do ls.
/root = home directory for root system user, not /home. data is stored here /home/root
/tmp = root directory, store data needed once or twice. eg: enumeration scripts. go to tmp, do ls.
similar to RAM on computers.

=================================================================================================================

PART3:

Terminal text editors:
Nano:
--- nano myfile = create or edit a file = launches nano
ctrl+X to exit nano [^X Exit]
VIM:
advanced text editor

General or Useful utilities:
--- wget = download files from web = web get
wget https://assets.tryhackme.com/additional/linux-fundamentals/part3/myfile.txt
--- scp = securely transfer files (local to remote host) = secure copy
scp source_file user@host-ip:destination_directory
--- scp = copy files from remote to local
scp user@host-ip:/path/to/source/myfile.txt
--- scp = copy an entire directory recursively
scp -r myfolder/ user@remote-host-ip:/path/to/destination/


Serve files from your host:
Python = HTTPServer module = turns computer into web server
other hosts use [curl, wget] to download it
--- python3 -m  http.server = run from directory which has the files to serve (file eg: myfile)
from another terminal,
--- wget http://ip-address:port-number/myfile
disadvantage = no indexing. remember name, loc of file.
updog = more better light weight web server.
after using wget, ls, ls -l, ls -a, cat myfile, see the contents.
ctrl + c to stop the python made server

Processes 101:
programs running on machine = processes
managed by kernel with process ID's
--- ps = view running processes in current user's session
--- ps aux = see running process, some more info 
--- top = more insights to running processes
--- kill = kill a command by providing it's PID
SIGTERM = clean kill
SIGKILL = unclean kill
SIGSTOP = stop or suspend a process.

OS = split resources with namespaces. Splitting system.
to isolate processes for another. access to certain amount of computing power.
PID 0 started when system boots = system's init like systemd.

Launch manually/ Launch on boot
--- systemctl = interact with systemd process/ daemon.
systemctl [option] [service]
option = start, stop, enable, disable
eg: systemctl start apache2
enable = start service on bootup of system

process run in 2 states: background or foreground
echo "Keer" = gives output
echo "Keer" & = gives ID
good use when copying files. Let it run, do other processes.
ctrl + z to background a process.
confirm the background process with (ps aux)
--- fg = bring process to foreground
locate processes, find the flag?



Maintaining your system: automation:
crontabs = a process, started during boot. manages cron jobs.
crontabs needs 6 values: min, hour, date, month, day, cmd
use * if no value. Down = executed every 12 hours.
--- 0 */12 * * * cp -R /home/cmnatic/Documents /var/backups/
--- crontab -e = edit crontab. select editor like nano.

Maintaining your system: package management:
packages and software repositories.
"apt" repos
OS vendor repository. community repository = extend capability of OS.
--- add-apt-repository = get additional repositories

managing repos: add or remove:
dpkg = package installer
apt = updates packages when system gets updated.
integrity check with GPG keys- gnu privacy guard.
--- wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
= get GPG, use apt-key to trust it
install the software that we have trusted and added to apt 
--- apt update
--- apt install sublime-text
delete the previously added files, then
--- apt remove sublime-text

Maintaining your systems: Logs:
Apache2 webserver, fail2ban service, UFW service = logs eg
[access log, error log]


crontabs
apt
dpkg
gpg keys
access log files


--- sudo usermod -l chandru saish
--- usermod  or  chmod
--- gpasswd

----------------------------------------------------------------------------------------------------------------
================================================================================================================
----------------------------------------------------------------------------------------------------------------

LINUX Commands:

pwd  =  where am i
ls  =  what's inside folder
ls -a
ls -l
ls -al
cd  =  go there
cd ~  =  cd to home
cd /home
cd /  =  cd to root
cd root
cd bin
cd sbin
cd ..  =  get back

whoami  =  self?
clear  =  clear
cat  =  what's inside file
cat ls  =  what's inside list file
cp  =  copy
cp ls saish  =  use saish for ls cmd too
sudo  =  pretend to be admin

rm  =  removes files
rm ls  =  remove the list file
cat cat
adduser  =  adds new user
adduser supersai
which  =  find location
which cat

ps  =  process status
su root
sudo su
id  =  gives details
hostname  =  as it is
uname
uname -r
uname -a
ifconfig
ss
netstat
env
lsusb
lsblk
lsof
who
man  =  manual for a file
man ls
apropos ls
us

adduser saish
useradd gayu
passwd saish
usermod --help
su gayu
visudo
groupadd feelings
groups
usermod -aG feelings saish
usermod -aG feelings gayu
gpasswd -d gayu feelings
su saish
userdel gayu

usermod change name how?

groupdel feelings

-- useradd
-- usermod
-- userdel
-- groupadd
-- groupmod
-- groupdel

cat /etc/passwd  =  look at users
cat /etc/group  =  look at groups

apt edit -sources
apt --help
apt list
apt show nmap
apt search nmap
apt remove pidgin
sudo apt update && sudo apt upgrade
apt install git

pstree
sudo systemctl start ssh
sudo systemctl enable ssh
sudo systemctl status nginx
ps -u user
ps -u user |grep firefox
pgrep firefox  =  find process id by name
kill process-id
ps --help simple
ps -aux
top
htop
ping -c networkchuck.com
sleep 30
jobs
bg 1
fg 1
kill 1
pkill 1 ping

----------------------------------------------------------------------------------------------------------------
================================================================================================================
----------------------------------------------------------------------------------------------------------------

cd /home
mkdir cit
cd cit
mousepad joinerslist.txt
ll -l
sudo newusers joinerslist.txt
ls /etc/passwd
ll
cd /home/cit
sudo mkdir TeamC
cd TeamC
touch Astrainfo.txt
ll TeamC
sudo groupadd TeamC
sudo usermod -G TeamC saish
sudo usermod -G TeamC joe
sudo usermod -G TeamC rahul
ll
members --all TeamC
chown --help
chown -R saish:TeamC TeamC
ll
chmod 700 TeamC

------------------------------------------------------------------------------
==============================================================================
------------------------------------------------------------------------------

ssh saisha@96.149.117.8
ls
ls -l = lists them
ls -a = hidden files too
pwd
cd /usr/bin
touch letter.txt
touck all the five are files
touch linode{1..10}
touch -d tomorrow goodmorning.txt
echo hai
echo hai > message.txt
nano message.txt
vim message.txt
cat message.txt
shred message.txt
cat message.txt

mkdir radararea
ls
cp message.txt ./radararea/message.txt
mv message.txt ./radararea/message.txt
rm message.txt
rmdir radararea
rmdir -r radararea

ln -s letter.txt filelink
clear
whoami = end of existential crisis
useradd shraddha
adduser deepika  =  set parameters
su deepika
exit
passwd shraddha
passwd

apt update
apt install finger
finger shraddha

man finger
man man
man cat

whatis finger
which finger
whereis finger

wget https://raw.githubcontent.com/...  =  get data from web
ls

curl https://raw.git..... > quantum1.txt
zip quantum1.zip quantum1.txt
unzip quantum1.zip

cat quantum1.txt
less quantum1.txt
head quantum1.txt
tail quantum1.txt
cmp gayu.txt saish.txt  =  compare 2 files
diff gayu.txt saish.txt  =  tells the difference in 2 files
cat message.txt | grep sort
find / -name "quantum1"
find . -type f -empty
find . -perm /a=x

chmod +x message.txt  =  change modifications
chown shraddha message.txt  =  change ownership

ifconfig
ip address
ip address | grep eth0
ip address | grep eth0 | grep inet
ip address | grep eth0 | grep inet | awk '{print $2}'

cat /etc/resolv.conf
resolvectl status
ping saishportfolio.com
ping -c 5 saishportfolio.com
ping -c 5 -s 500 saishportfolio.com

traceroute saishportfolio.com

netstat
netstat -tulpn
ss

ufw allow 80
ufw status
ufw enable

uname
uname -a

apt install neofetch
neofetch
cal

echo "4+5+6" | bc

free
df
df -H
ps
ps -aux
top
htop

ps -aux | grep thisisme
kill -9 6659
pkill -f thisisme

systemctl stop apache2
history
sudo reboot
sudo shutdown
sudo shutdown -h now

----------------------------------------------------------------------------------------------------------------
================================================================================================================
----------------------------------------------------------------------------------------------------------------

Notes from CCST activity:

Configure authentication and authorization in Linux:

---------------------------
add a group for new users:

escalate privilege to root level
--- sudo su

add a new group
--- groupadd HR

verify group added. cat, path of group
--- cat /etc/group
locate the group in  list, note the group id
---------------------------
add user accounts to HR group

add Ramya as new user, move her to HR group
--- adduser Ramya

move Ramya to HR group
--- usermod -G HR Ramya

do same for another new user
--- adduser Gayathri
--- usermod -G HR Gayathri

verify new users in passwd file
--- cat /etc/passwd

view users in shadow file
--- cat /etc/shadow
---------------------------
login as Ramya, explore directories and change permissions:
switch user from root to Ramya
GUI, menu, logout, switch user, login as Ramya, open terminal.

explore environment
--- pwd
--- ls -l
list all directories in location
and see their access control

--- cd Gayathri
able to navigate from Ramya to Gayathri directory
x = anyone can enter the directory
--- touch new.txt
denied! no permission for Ramya to write to Gayathri directory
-- cd ..
[r-x] is the permission
---------------------------
login as root access or super user and change access.

--- su user
--- sudo -i

modify permissions for Gayathri
--- cd /home
--- cd chmod o-x Gayathri
--- ls -l

verify Ramya can't access Gayathri directory

logout
--- cd Gayathri
permission denied

--- chmod u+rwx   = add rwx for user
--- chmod u+rw   = add rw for user
--- chmod o+r   = add read for others
--- chmod g-rwx   = remove rwx for group

user
group
others
-all
----------------------

switch user, login as Gayathri:
open terminal

explore Gayathri's environment
--- pwd
--- cd /home
or
--- cd ../..
--- ls -l
explore permissions

2 types:
symbolic permission  =  rwx
absolute permission  =  octal numbers

octal numbers:
7 = rwx
6 = rw
5 = rx
4 = r
3 = wx
2 = w
1 = e
0 = none

--- chmod 705 Gayathri
--- ls -l
--- cd Gayathri
--- touch test1.txt
--- ls -l
notice permissions

switch user, login as Ramya
--- cd Gayathri
--- ls -l
--- touch Ramya.txt

switch user, login as user
close the vm

----------------------------------------------------------------------------------------------------------------
================================================================================================================
----------------------------------------------------------------------------------------------------------------

-- sudo apt update
-- sudo apt install tor -y

-- sudo service tor start
-- sudo service tor stop
-- sudo service tor status

service vs systemctl
-- sudo service network-manager restart
-- sudo systemctl restart networking
-- sudo systemctl restart systemd-networkd

sudo nano /etc/proychains.conf
edit it for your configuration

===========================================================================

find
locate
grep

===========================================================================

sudo apt update
sudo apt-get install software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt update
sudo apt-get install python3.11

===========================================================================

grep = analyse log files
passwd = change password

--- cd ~ = to home
--- cd / = to root

(in windows, C drive is base directory)
at home = permission, not at root.

--- locate command = 
update the kali db

==========================================================================

FILE MANAGEMENT:
different in Linux and Python

in python, magic method = __name__
python filename

file management, permission management

- rwx rwx
- = file
d = directory
l = link
confuse forensic investigators with tampering

--- ls -al
--- ls -l

activity:
--- sudo su
--- mkdir Yamada
--- ls
--- ls -l
--- cd Yamada
--- touch Ryo.txt
--- exit
--- ll
--- cd Yamada
--- cat Ryo.ttxt
touch "Hai bro" > Ryo.txt = permission denied

user
group
others
all


touch
echo
nano
mousepad

----------------------------------------------------------------------------------------------------------------
================================================================================================================
----------------------------------------------------------------------------------------------------------------

/var/www/html = default root folder of webserver
/etc/shadow = stores encrypted passwords
/var/log = log files of server
/bin/bash = scripting

/var has things that are prone to CHANGE.
/bin/bash    /bin/sh    /bin/zsh
--- cat /etc/shells

--- cat /etc/passwd | grep /bin/zsh

etc shadow has encrypted user passwords
etc passwd has userID, groupID ...

to search in a folder
--- grep -r folder
--- sudo grep -r "19.168.145.144"
check acces logs of the yesterday server
concentrate on one ip address
--- cat ssh.log
--- grep -r parrot (or) user

--- echo saish | md5sum > hfile.txt
--- echo -n pasword12 | md5sum > hash3
--- john hash3 -w=rockyou.txt
--- john hash3 -w=rockyou.txt --format=RAW-MD5

--- hashcat --help | grep sha256
-- hashcat -a 0 -m 0 hash3 rockyou.txt

-- hydra -l jenny -P rockyou.txt 10.10.90.116 ftp -t 64

--- pdf2john test.pdf > hash7.txt
--- hashcat test.pdf rockyou.txt
--- hashcat-m 10700 hash7.txt rockyou.txt -O

DISCOVER THE MODES IN MANUAL PAGE OF TOOL

-- curl http://10.12.87.143/rev.php
use internet without a browser.

-- which tool-name

see hidden files
ls -a
ssh-keygen
cd .ssh
cat id_rsa

-- find / -iname flag.txt 2>/dev/null

--- ps aux | grep openvpn
--- htop
--- ps
--- kill pid

apt vs apt-get
systemctl vs service

--- stty raw -echo. fg
upgrade a reverse shell ?

